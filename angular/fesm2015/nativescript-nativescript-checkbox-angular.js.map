{"version":3,"file":"nativescript-nativescript-checkbox-angular.js","sources":["../../index.ts","../../nativescript-nativescript-checkbox-angular.ts"],"names":[],"mappings":";;;;;;AAaA,SAAS,YAAY,CAAC,KAAK;AAAI,IAC7B,IAAI,eAAe,CAAC;AACtB,IAAE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;AAC7C,QAAI,eAAe,GAAG,CAAC,CAAC;AACxB,KAAG;AAAC,SAAK;AACT,QAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACnC,YAAM,eAAe,GAAG,KAAK,CAAC;AAC9B,SAAK;AAAC,aAAK;AACX,YAAM,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;AACzD,YAAM,eAAe,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;AAC7D,SAAK;AACL,KAAG;AACH,IAAE,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AACrC,CAAC;AAED,eAAe,CAAC,UAAU,EAAE,MAAM,QAAQ,CAAC,CAAC;AAE5C,MAAM,sBAAsB,GAAG;AAC/B,IAAE,OAAO,EAAE,iBAAiB;AAC5B,IAAE,WAAW,EAAE,UAAU,CAAC,MAAM,oBAAoB,CAAC;AACrD,IAAE,KAAK,EAAE,IAAI;AACb,CAAC,CAAC;AAIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAKa,oBAAqB,SAAQ,iBAAgC;AAC1E,IAAE,YAAgC,UAAsB;AACxD,QAAI,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AACpC,QAOS,cAAS,GAAG,SAAQ,CAAC;AAC9B,KARG;AACH,IAES,qBAAqB,CAAC,KAAU;AACzC,QAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAG;AACH,IAGS,UAAU,CAAC,KAAU;AAAI,QAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC9B,KAAG;AACH,IACS,iBAAiB,CAAC,EAAc;AAAI,QACzC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,KAAG;AACH;gDAxBC,SAAS,SAAC,kBACT,QAAQ,EACN;wJAAkN,kBACpN,SAAS,EAAE,CAAC,sBAAsB,CAAC,cACpC;;+GACI;AAAC;AAA8C,YAlDlD,UAAU,uBAmDG,MAAM,SAAC,UAAU;AAAQ;AAAG;AACpB,oCAGpB,YAAY,SAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;AACvC;;;;;;;;;;;;;oBAAE;AAAC,MAqBM,iBAAiB;AAAG;6CANhC,QAAQ,SAAC;CACR,YAAY,EAAE,CAAC,oBAAoB,CAAC,kBACpC,SAAS,EAAE,EAAE,kBACb,OAAO,EAAE,CAAC,WAAW,CAAC,kBACtB,OAAO,EAAE,CAAC,WAAW,EAAE,oBAAoB,CAAC,cAC7C;;;;;;;;;;0BACI;AAAC;AC/EN;AACA;AACA;AACA;AACA;AAC2B","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostListener,\n  Inject,\n  NgModule\n} from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { registerElement, BaseValueAccessor } from '@nativescript/angular';\nimport { View } from '@nativescript/core';\nimport { CheckBox } from '@nstudio/nativescript-checkbox';\n\nfunction convertToInt(value): number {\n  let normalizedValue;\n  if (value === undefined || value === null) {\n    normalizedValue = 0;\n  } else {\n    if (typeof value === 'number') {\n      normalizedValue = value;\n    } else {\n      const parsedValue = parseInt(value.toString(), 10);\n      normalizedValue = isNaN(parsedValue) ? 0 : parsedValue;\n    }\n  }\n  return Math.round(normalizedValue);\n}\n\nregisterElement('CheckBox', () => CheckBox);\n\nconst CHECKED_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckedValueAccessor),\n  multi: true\n};\n\nexport type CheckableView = { checked: boolean } & View;\n\n/**\n * The accessor for setting checked property and listening to changes that is used by the\n * {@link NgModel} directives.\n *\n *  ### Example\n *  ```\n *  <CheckBox [(ngModel)]=\"model.test\">\n *  ```\n */\n@Directive({\n  selector:\n    'CheckBox[ngModel], CheckBox[formControlName], CheckBox[formControl], checkBox[ngModel], checkBox[formControlName], checkBox[formControl], check-box[ngModel], check-box[formControlName], check-box[formControl]',\n  providers: [CHECKED_VALUE_ACCESSOR]\n})\nexport class CheckedValueAccessor extends BaseValueAccessor<CheckableView> {\n  constructor(@Inject(ElementRef) elementRef: ElementRef) {\n    super(elementRef.nativeElement);\n  }\n\n  @HostListener('checkedChange', ['$event'])\n  public checkedChangeListener(event: any) {\n    this.onChange(event.value);\n  }\n\n  public onTouched = () => {};\n\n  public writeValue(value: any): void {\n    this.view.checked = value;\n  }\n\n  public registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n\n@NgModule({\n  declarations: [CheckedValueAccessor],\n  providers: [],\n  imports: [FormsModule],\n  exports: [FormsModule, CheckedValueAccessor]\n})\nexport class TNSCheckBoxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}